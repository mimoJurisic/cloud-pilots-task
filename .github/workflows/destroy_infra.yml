name: 'clean up resoures'

on:
  push:
    branches: [ "main" ]
    paths: 
      - '.github/workflows/infrastructure_terraform.yml'
      - 'infra-terraform/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  terraform:
    name: 'destroy'
    runs-on: ubuntu-latest
    environment: demo

    permissions:
      contents: 'read'
      id-token: 'write'

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Google Auth
      uses: 'google-github-actions/auth@v2'

      with:
        workload_identity_provider: '${{ secrets.WI_PROVIDER}}'
        service_account: '${{ secrets.SA_EMAIL}}'

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init
      working-directory: ./infra-terraform

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      run: terraform fmt -check
      working-directory: ./infra-terraform

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -input=false
      working-directory: ./infra-terraform

      # On push to "main", build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform destroy
      run: terraform destroy -auto-approve -input=false
      working-directory: ./infra-terraform
